apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse'
apply plugin: 'idea'

println "PROJECT=" + project.name

buildscript {
  repositories {
    mavenCentral()
    maven {
      url "http://download.java.net/maven/2"
    }
    maven { url 'http://repo.spring.io/plugins-release' }
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8'
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
  }
}

repositories { mavenCentral() }

dependencies {
    def tomcatVersion = '7.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    } 
    
	compile 'org.springframework:spring-core:3.2.3.RELEASE'
	compile 'org.springframework:spring-webmvc:3.2.3.RELEASE'

	compile 'org.slf4j:slf4j-api:1.7.5'
	runtime 'org.slf4j:slf4j-log4j12:1.7.5'

	testCompile 'org.springframework:spring-test:3.2.3.RELEASE'
	
	testCompile 'junit:junit:4.11'
	testCompile "org.mockito:mockito-core:1.9.5"
	testCompile "org.hamcrest:hamcrest-library:1.3"
	  
    provided 'javax.servlet:javax.servlet-api:3.0.1'
}
test {
  testLogging {
    // Show that tests are run in the command-line output
    events 'started', 'passed'
  }
}
task wrapper(type: Wrapper) { gradleVersion = '1.6' }

tomcatRunWar.contextPath = ''